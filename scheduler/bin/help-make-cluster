#!/usr/bin/env bash

# Usage: ./bin/help-make-cluster <project> <zone> <clustername> <kube_config_file>
#   Configure a kubernetes cluster for running pool-based integration tests and running pools in general.
#   This is intended to be used by other scripts, not invoked directly.
#   <project> is a gcloud project.
#   <zone> can be a zone. E.g., us-central1-a
#   <clustername> is the name of a cluster. E.g., 'test-cluster-1'
#   <kube_config_file> An extra config file, other than the default KUBECONFIG, to write the connection information to.

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

PROJECT=$1
ZONE=$2
CLUSTERNAME=$3
COOK_KUBECONFIG=$4
GKE_CLUSTER_OWNER=${GKE_CLUSTER_OWNER:-$USER}

gcloud="gcloud --project $PROJECT"

function create_node_pool {
  local cook_pool=$1
  local machine_type=$2
  echo "---- Creating $machine_type node pool for Cook pool $cook_pool"
  $gcloud container node-pools create "cook-pool-$cook_pool-$machine_type" \
         --zone "$ZONE" \
         --cluster="$CLUSTERNAME" \
         --disk-size=20gb \
         --machine-type="$machine_type" \
         --node-taints="cook-pool=$cook_pool:NoSchedule" \
         --enable-autoscaling \
         --min-nodes=0 \
         --max-nodes=6 \
         --node-labels="cook-pool=$cook_pool,test-label=true,node-type=$machine_type"
}

echo "---- Building kubernetes cluster for project=$PROJECT zone=$ZONE clustername=$CLUSTERNAME kubeconfig=$COOK_KUBECONFIG"

# This creates a cluster, with some nodes that are needed for kubernetes management.
# Create 7 nodes, with three tainted for k8s-alpha, 3 untainted and 3 tainted with k8s-gamma pool.
# The untainted ones are for GKE's own uses for its system pods. Also convenient to have around if I'm doing non-pool tests.
# The second line of flags about upgrades and legacy endpoints is to suppress some warnings.
echo "---- Creating new cluster with owner $GKE_CLUSTER_OWNER (please wait 5 minutes)"
time $gcloud container clusters create "$CLUSTERNAME" --zone "$ZONE" --disk-size=20gb --machine-type=g1-small --preemptible  \
     --no-enable-autoupgrade --no-enable-basic-auth --no-issue-client-certificate --no-enable-ip-alias --metadata disable-legacy-endpoints=true \
     --labels longevity=temporary,owner="$GKE_CLUSTER_OWNER" --enable-autoscaling --min-nodes=0 --max-nodes=6

echo "---- Setting up gcloud credentials"
# Add credentials to the kubeconfig used by cook.
KUBECONFIG=${COOK_KUBECONFIG} $gcloud container clusters get-credentials "$CLUSTERNAME" --zone "$ZONE"
# Add credentials to default kubeconfig for convenience purposes.
$gcloud container clusters get-credentials "$CLUSTERNAME" --zone "$ZONE"


echo "---- Setting up cook priority classes in kubernetes"
KUBECONFIG=${COOK_KUBECONFIG} kubectl create -f "${DIR}/priority-class-cook-workload.yaml"
KUBECONFIG=${COOK_KUBECONFIG} kubectl create -f "${DIR}/priority-class-synthetic-pod.yaml"

# Make some node-pools --- this takes a while, but it helps guarantee that we have nodes with the appropriate cook-pool taints.
echo "---- Making extra k8s-alpha and k8s-gamma nodepools for cook pools (please wait 5-10 minutes)"
create_node_pool k8s-alpha g1-small
create_node_pool k8s-gamma g1-small
create_node_pool k8s-quota g1-small
create_node_pool k8s-alpha e2-small
create_node_pool k8s-gamma e2-small

echo "---- Setting up cook namespace in kubernetes"
KUBECONFIG=${COOK_KUBECONFIG} kubectl create -f docs/make-kubernetes-namespace.json

echo "---- Showing the clusters and nodes we generated"
$gcloud container clusters list
KUBECONFIG=${COOK_KUBECONFIG} kubectl get nodes
