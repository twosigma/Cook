{:port #config/env-int "COOK_PORT"
 :authorization {:one-user "root"}
 :database {:datomic-uri #config/env "COOK_DATOMIC_URI"}
 :hostname #config/env "COOK_HOSTNAME"
 :zookeeper {:local? #config/env-bool "COOK_ZOOKEEPER_LOCAL"
             :connection #config/env "COOK_ZOOKEEPER"}
 :scheduler {:offer-incubate-ms 15000
             :task-constraints {:timeout-hours 1
                                :timeout-interval-minutes 1
                                :memory-gb 48
                                :retry-limit 15
                                :cpus 6}}
 :executor {:command #config/env "COOK_EXECUTOR_COMMAND"
            :environment {"EXECUTOR_DEFAULT_PROGRESS_OUTPUT_NAME" "stdout"}
            :portion 0.25
            :uri {:cache false
                  :executable true
                  :extract false
                  :value #config/env "COOK_EXECUTOR"}}
 :rate-limit {:user-limit-per-m 1000000}
 :rebalancer {:dru-scale 1}
 :mesos {:master #config/env "MESOS_MASTER"
         :master-hosts [#config/env "MESOS_MASTER_HOST"]
         :failover-timeout-ms nil ; When we close the instance of Cook, all its tasks are killed by Mesos
         :leader-path "/cook-scheduler"
         :framework-id #config/env "COOK_FRAMEWORK_ID"}
 :unhandled-exceptions {:log-level :error}
 :metrics {:jmx true}
 :nrepl {:enabled? true
         :port #config/env-int "COOK_NREPL_PORT"}
 :log {:file #config/env "COOK_LOG_FILE"
       :levels {"datomic.db" :warn
                "datomic.peer" :warn
                "datomic.kv-cluster" :warn
                :default :info}}}
