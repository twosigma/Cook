{:port #config/env-int "COOK_PORT"
 :ssl {:port #config/env-int "COOK_SSL_PORT"
       :keystore-path #config/env "COOK_KEYSTORE_PATH"
       :keystore-type "pkcs12"
       :keystore-pass "cookstore"}
 :hostname "172.17.0.1"
 :authorization {;; Note that internally, Cook will select :http-basic if it's set to true,
                 ;; and fall back to :one-user only if :http-basic is false.
                 :http-basic #config/env-bool "COOK_HTTP_BASIC_AUTH"
                 :one-user "root"}
 :authorization-config {;; What function should be used to perform user authorization?
                        ;; See the docstring in cook.rest.authorization for details.
                        :authorization-fn cook.rest.authorization/configfile-admins-auth-open-gets
                        ;; These users have admin privileges when using configfile-admins-auth;
                        ;; e.g., they can view and modify other users' jobs.
                        :admins #{"root" "travis"}
                        ;; users that are allowed to do things on behalf of others
                        :impersonators #{"poser" "travis"}}
 :compute-clusters [{:factory-fn cook.mesos.mesos-compute-cluster/factory-fn
                     :config {:framework-id #config/env "COOK_FRAMEWORK_ID"
                              :compute-cluster-name "local-mesos"
                              :master #config/env "MINIMESOS_ZOOKEEPER"
                              :failover-timeout-ms nil
                              :role "cook"}}]
 :container-defaults {:volumes [{:host-path "/tmp/cook-integration-mount"
                                 :container-path "/mnt/cook-integration"
                                 :mode "RW"}]}
 :cors-origins ["https?://cors.example.com"]
 :data-local {:fitness-calculator {:cache-ttl-ms 20000
                                   :cost-endpoint #config/env "DATA_LOCAL_ENDPOINT"
                                   :update-interval-ms 1000}}
 :database {:datomic-uri #config/env "COOK_DATOMIC"}
 :zookeeper {:connection #config/env "COOK_ZOOKEEPER"
             :local? #config/env-bool "COOK_ZOOKEEPER_LOCAL"
             :local-port #config/env-int-default ["COOK_ZOOKEEPER_LOCAL_PORT" -1]}
 :scheduler {:fenzo-fitness-calculator "cook.scheduler.data-locality/make-data-local-fitness-calculator"
             :offer-incubate-ms 15000
             :task-constraints {:timeout-hours 1
                                :timeout-interval-minutes 1
                                :memory-gb 48
                                :retry-limit 200
                                :cpus 10
                                :command-length-limit 5000}}
 :rate-limit {:expire-minutes 120 ; Expire unused rate limit entries after 2 hours.
              ; Keep these job-launch and job-submission values as they are for integration tests. Making them smaller can cause
              ; spurious failures, and making them larger will cause the rate-limit integration test to skip itself.
              :job-launch {:bucket-size #config/env-int-default ["JOB_LAUNCH_RATE_LIMIT_BUCKET_SIZE" 10000]
                           :enforce? true
                           :tokens-replenished-per-minute #config/env-int-default ["JOB_LAUNCH_RATE_LIMIT_REPLENISHED_PER_MINUTE" 10000]}
              :job-submission {:bucket-size 1000
                               :enforce? true
                               :tokens-replenished-per-minute 600}
              :user-limit-per-m 1000000}
 :plugins {:job-submission-validator {:batch-timeout-seconds 40
                                      :factory-fns ["cook.plugins.demo-plugin/submission-factory"
                                                    "cook.plugins.demo-plugin/submission-factory2"]}
           :job-launch-filter {:age-out-last-seen-deadline-minutes 10
                               :age-out-first-seen-deadline-minutes 600
                               :age-out-seen-count 10
                               :factory-fn "cook.plugins.demo-plugin/launch-factory"}}
 :rebalancer {:dru-scale 1
              :interval-seconds 30
              :max-preemption 500.0
              :min-dru-diff 1.0
              :safe-dru-threshold 1.0}
 :mesos {:leader-path "/cook-scheduler"}
 :executor {:command #config/env "COOK_EXECUTOR_COMMAND"
            :environment {"EXECUTOR_DEFAULT_PROGRESS_OUTPUT_NAME" "stdout"}
            :portion #config/env-int-default ["COOK_EXECUTOR_PORTION" 0]}
 :agent-query-cache {:ttl-ms 1000}
 :sandbox-syncer {:sync-interval-ms 1000}
 :unhandled-exceptions {:log-level :error}
 :metrics {:jmx true}
 :nrepl {:enabled? false}
 :log {:file #config/env "COOK_LOGFILE"
       :levels {"datomic.db" :warn
                "datomic.peer" :warn
                "datomic.kv-cluster" :warn
                "cook.scheduler.data-locality" :debug
                "cook.mesos.fenzo-utils" :debug
                "cook.mesos.rebalancer" :debug
                "cook.mesos.scheduler" :debug
                :default :info}}
 :pools {:default #config/env "COOK_DEFAULT_POOL"}}
